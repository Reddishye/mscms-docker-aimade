services:
  # Database
  database:
    image: mariadb:10.11
    container_name: minestore-db
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_DATABASE:-minestore}
      - MYSQL_USER=${DB_USERNAME:-minestore_user}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - TZ=${TIMEZONE:-UTC}
    volumes:
      - database_data:/var/lib/mysql
    networks:
      - minestore_network
    command: [
      '--default-authentication-plugin=mysql_native_password',
      '--character-set-server=utf8mb4',
      '--collation-server=utf8mb4_unicode_ci',
      '--innodb-buffer-pool-size=256M'
    ]
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  # Redis
  redis:
    image: redis:7-alpine
    container_name: minestore-redis
    restart: unless-stopped
    command: >
      redis-server 
      --appendonly yes 
      --maxmemory 256mb 
      --maxmemory-policy allkeys-lru
      ${REDIS_PASSWORD:+--requirepass "$REDIS_PASSWORD"}
    volumes:
      - redis_data:/data
    networks:
      - minestore_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # App Installer
  app-installer:
    build: 
      context: .
      dockerfile: Dockerfile
      target: minestore-installer
    container_name: minestore-installer
    restart: "no"
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - minestore_app:/var/www/minestore
      - minestore_shared:/shared
    environment:
      - APP_URL=${APP_URL}
      - LICENSE_KEY=${LICENSE_KEY}
      - DB_CONNECTION=mysql
      - DB_HOST=database
      - DB_PORT=3306
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - APP_NAME=${APP_NAME}
      - APP_ENV=production
      - APP_DEBUG=false
      - APP_KEY=${APP_KEY}
      - TIMEZONE=${TIMEZONE}
      - LOCALE=${LOCALE}
      - PAYNOW_ENABLED=${PAYNOW_ENABLED}
      - PAYNOW_STORE_ID=${PAYNOW_STORE_ID}
      - PAYNOW_API_KEY=${PAYNOW_API_KEY}
      - STEAM_API_KEY=${STEAM_API_KEY}
    networks:
      - minestore_network

  # PRODUCTION Laravel Backend with Apache
  minestore-laravel:
    build:
      context: .
      dockerfile: Dockerfile
      target: minestore-production  # Uses Apache stage
    container_name: minestore-laravel
    restart: unless-stopped
    depends_on:
      app-installer:
        condition: service_completed_successfully
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - minestore_app:/var/www/minestore
    environment:
      - APP_URL=${APP_URL}
      - LICENSE_KEY=${LICENSE_KEY}
      - DB_CONNECTION=mysql
      - DB_HOST=database
      - DB_PORT=3306
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - APP_NAME=${APP_NAME}
      - APP_ENV=production
      - APP_DEBUG=false
      - APP_KEY=${APP_KEY}
      - TIMEZONE=${TIMEZONE}
      - LOCALE=${LOCALE}
      - PAYNOW_ENABLED=${PAYNOW_ENABLED}
      - PAYNOW_STORE_ID=${PAYNOW_STORE_ID}
      - PAYNOW_API_KEY=${PAYNOW_API_KEY}
      - STEAM_API_KEY=${STEAM_API_KEY}
    working_dir: /var/www/minestore
    networks:
      - minestore_network
      - coolify
    # PRODUCTION Apache startup
    command: >
      bash -c "
        echo 'Waiting for installation to complete...'
        while [ ! -f /var/www/minestore/.installed ]; do
          sleep 5
        done
        
        cd /var/www/minestore
        
        echo 'Setting production file permissions...'
        chown -R www-data:www-data /var/www/minestore
        chmod -R 755 /var/www/minestore
        chmod -R 775 storage bootstrap/cache
        
        echo 'Starting Apache in production mode...'
        apache2-foreground
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/up"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s

  # Next.js Frontend
  minestore-frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: minestore-frontend
    container_name: minestore-frontend
    restart: unless-stopped
    depends_on:
      app-installer:
        condition: service_completed_successfully
    volumes:
      - minestore_shared:/shared:ro
    environment:
      - NODE_ENV=production
      - PORT=3000
      - NEXT_PUBLIC_API_URL=${APP_URL}
    networks:
      - minestore_network
      - coolify
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s

  # Queue Worker
  queue-worker:
    build:
      context: .
      dockerfile: Dockerfile
      target: minestore-runtime
    container_name: minestore-queue-worker
    restart: unless-stopped
    depends_on:
      minestore-laravel:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - minestore_app:/var/www/minestore
    environment:
      - APP_URL=${APP_URL}
      - LICENSE_KEY=${LICENSE_KEY}
      - DB_CONNECTION=mysql
      - DB_HOST=database
      - DB_PORT=3306
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
    working_dir: /var/www/minestore
    networks:
      - minestore_network
    command: >
      bash -c "
        while [ ! -f /var/www/minestore/.installed ]; do sleep 5; done
        cd /var/www/minestore
        php artisan queue:work --queue=high,standard,low,default,paynow --sleep=3 --tries=3 --max-time=3600 --memory=256
      "

  # Scheduler
  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
      target: minestore-runtime
    container_name: minestore-scheduler
    restart: unless-stopped
    depends_on:
      minestore-laravel:
        condition: service_healthy
    volumes:
      - minestore_app:/var/www/minestore
    environment:
      - APP_URL=${APP_URL}
      - LICENSE_KEY=${LICENSE_KEY}
      - DB_CONNECTION=mysql
      - DB_HOST=database
      - DB_PORT=3306
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
    working_dir: /var/www/minestore
    networks:
      - minestore_network
    command: >
      bash -c "
        while [ ! -f /var/www/minestore/.installed ]; do sleep 5; done
        cd /var/www/minestore
        while true; do
          php artisan schedule:run --verbose --no-interaction
          sleep 60
        done
      "

volumes:
  minestore_app:
    driver: local
  minestore_shared:
    driver: local
  database_data:
    driver: local
  redis_data:
    driver: local

networks:
  minestore_network:
    driver: bridge
  coolify:
    external: true
